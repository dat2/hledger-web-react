// flow-typed signature: 1c128c3b18fe5219b4ef6d11e66d1245
// flow-typed version: <<STUB>>/ramda-adjunct_v^2.1.0/flow_v0.61.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'ramda-adjunct'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'ramda-adjunct' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'ramda-adjunct/dist/RA.node' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/dist/RA.node.min' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/dist/RA.web' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/dist/RA.web.min' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/dist/RA.web.standalone' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/dist/RA.web.standalone.min' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/cata' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/concatRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/curryRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/curryRightN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/fantasy-land/Identity' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/fantasy-land/mapping' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/fantasy-land/traits' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/fantasy-land/util' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/flattenPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/flattenProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/hasPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/index' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/ap' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/isOfTypeObject' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/polyfills/Number.isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/polyfills/Number.isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/polyfills/Number.isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/polyfills/Number.MAX_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/internal/polyfills/Number.MIN_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isEven' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNegative' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNilOrEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotNil' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNotValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isOdd' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isPositive' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isPromise' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isThenable' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/isValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/lensEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/lensIso' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/lensNotEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/lensNotSatisfy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/lensSatisfies' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/liftF' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/liftFN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/list' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/mergePath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/mergePaths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/mergeProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/mergeProps' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/mergeRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/noop' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/omitIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/paths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/pickIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/reduceP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/reduceRightP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/rejectP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/renameKeys' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/renameKeysWith' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/resolveP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/sliceFrom' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/sliceTo' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/spreadPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/spreadProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/stubArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/stubNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/stubObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/stubString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/stubUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/viewOr' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/weave' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/es/weaveLazy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/cata' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/concatRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/curryRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/curryRightN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/fantasy-land/Identity' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/fantasy-land/mapping' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/fantasy-land/traits' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/fantasy-land/util' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/flattenPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/flattenProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/hasPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/index' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/ap' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/isOfTypeObject' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/polyfills/Number.isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/polyfills/Number.isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/polyfills/Number.isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/polyfills/Number.MAX_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/internal/polyfills/Number.MIN_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isEven' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNegative' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNilOrEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotNil' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNotValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isOdd' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isPositive' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isPromise' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isThenable' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/isValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/lensEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/lensIso' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/lensNotEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/lensNotSatisfy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/lensSatisfies' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/liftF' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/liftFN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/list' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/mergePath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/mergePaths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/mergeProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/mergeProps' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/mergeRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/noop' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/omitIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/paths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/pickIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/reduceP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/reduceRightP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/rejectP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/renameKeys' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/renameKeysWith' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/resolveP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/sliceFrom' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/sliceTo' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/spreadPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/spreadProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/stubArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/stubNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/stubObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/stubString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/stubUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/viewOr' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/weave' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/lib/weaveLazy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/cata' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/concatRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/curryRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/curryRightN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/fantasy-land/Identity' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/fantasy-land/mapping' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/fantasy-land/traits' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/fantasy-land/util' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/flattenPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/flattenProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/hasPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/index' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/ap' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/isOfTypeObject' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/polyfills/Number.isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/polyfills/Number.isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/polyfills/Number.isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/polyfills/Number.MAX_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/internal/polyfills/Number.MIN_SAFE_INTEGER' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isEven' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNegative' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNilOrEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotArrayLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotAsyncFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotBoolean' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotEmpty' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotFinite' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotFloat' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotGeneratorFunction' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotInteger' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotNaN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotNil' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNotValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isNumber' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isObjLike' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isOdd' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isPair' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isPlainObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isPositive' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isPromise' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isThenable' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/isValidDate' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/lensEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/lensIso' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/lensNotEq' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/lensNotSatisfy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/lensSatisfies' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/liftF' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/liftFN' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/list' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/mergePath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/mergePaths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/mergeProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/mergeProps' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/mergeRight' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/noop' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/omitIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/paths' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/pickIndexes' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/reduceP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/reduceRightP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/rejectP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/renameKeys' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/renameKeysWith' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/resolveP' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/sliceFrom' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/sliceTo' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/spreadPath' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/spreadProp' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/stubArray' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/stubNull' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/stubObj' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/stubString' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/stubUndefined' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/viewOr' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/weave' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/src/weaveLazy' {
  declare module.exports: any;
}

declare module 'ramda-adjunct/tonicExample' {
  declare module.exports: any;
}

// Filename aliases
declare module 'ramda-adjunct/dist/RA.node.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.node'>;
}
declare module 'ramda-adjunct/dist/RA.node.min.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.node.min'>;
}
declare module 'ramda-adjunct/dist/RA.web.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.web'>;
}
declare module 'ramda-adjunct/dist/RA.web.min.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.web.min'>;
}
declare module 'ramda-adjunct/dist/RA.web.standalone.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.web.standalone'>;
}
declare module 'ramda-adjunct/dist/RA.web.standalone.min.js' {
  declare module.exports: $Exports<'ramda-adjunct/dist/RA.web.standalone.min'>;
}
declare module 'ramda-adjunct/es/cata.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/cata'>;
}
declare module 'ramda-adjunct/es/concatRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/concatRight'>;
}
declare module 'ramda-adjunct/es/curryRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/curryRight'>;
}
declare module 'ramda-adjunct/es/curryRightN.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/curryRightN'>;
}
declare module 'ramda-adjunct/es/fantasy-land/Identity.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/fantasy-land/Identity'>;
}
declare module 'ramda-adjunct/es/fantasy-land/mapping.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/fantasy-land/mapping'>;
}
declare module 'ramda-adjunct/es/fantasy-land/traits.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/fantasy-land/traits'>;
}
declare module 'ramda-adjunct/es/fantasy-land/util.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/fantasy-land/util'>;
}
declare module 'ramda-adjunct/es/flattenPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/flattenPath'>;
}
declare module 'ramda-adjunct/es/flattenProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/flattenProp'>;
}
declare module 'ramda-adjunct/es/hasPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/hasPath'>;
}
declare module 'ramda-adjunct/es/index.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/index'>;
}
declare module 'ramda-adjunct/es/internal/ap.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/internal/ap'>;
}
declare module 'ramda-adjunct/es/internal/isOfTypeObject.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/internal/isOfTypeObject'>;
}
declare module 'ramda-adjunct/es/internal/polyfills/Number.isFinite.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/es/internal/polyfills/Number.isFinite'
  >;
}
declare module 'ramda-adjunct/es/internal/polyfills/Number.isInteger.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/es/internal/polyfills/Number.isInteger'
  >;
}
declare module 'ramda-adjunct/es/internal/polyfills/Number.isNaN.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/es/internal/polyfills/Number.isNaN'
  >;
}
declare module 'ramda-adjunct/es/internal/polyfills/Number.MAX_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/es/internal/polyfills/Number.MAX_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/es/internal/polyfills/Number.MIN_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/es/internal/polyfills/Number.MIN_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/es/isArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isArray'>;
}
declare module 'ramda-adjunct/es/isArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isArrayLike'>;
}
declare module 'ramda-adjunct/es/isAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isAsyncFunction'>;
}
declare module 'ramda-adjunct/es/isBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isBoolean'>;
}
declare module 'ramda-adjunct/es/isDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isDate'>;
}
declare module 'ramda-adjunct/es/isEven.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isEven'>;
}
declare module 'ramda-adjunct/es/isFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isFinite'>;
}
declare module 'ramda-adjunct/es/isFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isFloat'>;
}
declare module 'ramda-adjunct/es/isFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isFunction'>;
}
declare module 'ramda-adjunct/es/isGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isGeneratorFunction'>;
}
declare module 'ramda-adjunct/es/isInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isInteger'>;
}
declare module 'ramda-adjunct/es/isNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNaN'>;
}
declare module 'ramda-adjunct/es/isNegative.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNegative'>;
}
declare module 'ramda-adjunct/es/isNilOrEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNilOrEmpty'>;
}
declare module 'ramda-adjunct/es/isNotArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotArray'>;
}
declare module 'ramda-adjunct/es/isNotArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotArrayLike'>;
}
declare module 'ramda-adjunct/es/isNotAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotAsyncFunction'>;
}
declare module 'ramda-adjunct/es/isNotBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotBoolean'>;
}
declare module 'ramda-adjunct/es/isNotDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotDate'>;
}
declare module 'ramda-adjunct/es/isNotEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotEmpty'>;
}
declare module 'ramda-adjunct/es/isNotFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotFinite'>;
}
declare module 'ramda-adjunct/es/isNotFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotFloat'>;
}
declare module 'ramda-adjunct/es/isNotFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotFunction'>;
}
declare module 'ramda-adjunct/es/isNotGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotGeneratorFunction'>;
}
declare module 'ramda-adjunct/es/isNotInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotInteger'>;
}
declare module 'ramda-adjunct/es/isNotNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotNaN'>;
}
declare module 'ramda-adjunct/es/isNotNil.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotNil'>;
}
declare module 'ramda-adjunct/es/isNotNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotNull'>;
}
declare module 'ramda-adjunct/es/isNotNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotNumber'>;
}
declare module 'ramda-adjunct/es/isNotObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotObj'>;
}
declare module 'ramda-adjunct/es/isNotObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotObjLike'>;
}
declare module 'ramda-adjunct/es/isNotPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotPair'>;
}
declare module 'ramda-adjunct/es/isNotPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotPlainObj'>;
}
declare module 'ramda-adjunct/es/isNotString.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotString'>;
}
declare module 'ramda-adjunct/es/isNotUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotUndefined'>;
}
declare module 'ramda-adjunct/es/isNotValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNotValidDate'>;
}
declare module 'ramda-adjunct/es/isNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNull'>;
}
declare module 'ramda-adjunct/es/isNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isNumber'>;
}
declare module 'ramda-adjunct/es/isObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isObj'>;
}
declare module 'ramda-adjunct/es/isObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isObjLike'>;
}
declare module 'ramda-adjunct/es/isOdd.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isOdd'>;
}
declare module 'ramda-adjunct/es/isPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isPair'>;
}
declare module 'ramda-adjunct/es/isPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isPlainObj'>;
}
declare module 'ramda-adjunct/es/isPositive.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isPositive'>;
}
declare module 'ramda-adjunct/es/isPromise.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isPromise'>;
}
declare module 'ramda-adjunct/es/isString.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isString'>;
}
declare module 'ramda-adjunct/es/isThenable.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isThenable'>;
}
declare module 'ramda-adjunct/es/isUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isUndefined'>;
}
declare module 'ramda-adjunct/es/isValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/isValidDate'>;
}
declare module 'ramda-adjunct/es/lensEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/lensEq'>;
}
declare module 'ramda-adjunct/es/lensIso.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/lensIso'>;
}
declare module 'ramda-adjunct/es/lensNotEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/lensNotEq'>;
}
declare module 'ramda-adjunct/es/lensNotSatisfy.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/lensNotSatisfy'>;
}
declare module 'ramda-adjunct/es/lensSatisfies.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/lensSatisfies'>;
}
declare module 'ramda-adjunct/es/liftF.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/liftF'>;
}
declare module 'ramda-adjunct/es/liftFN.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/liftFN'>;
}
declare module 'ramda-adjunct/es/list.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/list'>;
}
declare module 'ramda-adjunct/es/mergePath.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/mergePath'>;
}
declare module 'ramda-adjunct/es/mergePaths.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/mergePaths'>;
}
declare module 'ramda-adjunct/es/mergeProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/mergeProp'>;
}
declare module 'ramda-adjunct/es/mergeProps.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/mergeProps'>;
}
declare module 'ramda-adjunct/es/mergeRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/mergeRight'>;
}
declare module 'ramda-adjunct/es/noop.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/noop'>;
}
declare module 'ramda-adjunct/es/omitIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/omitIndexes'>;
}
declare module 'ramda-adjunct/es/paths.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/paths'>;
}
declare module 'ramda-adjunct/es/pickIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/pickIndexes'>;
}
declare module 'ramda-adjunct/es/reduceP.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/reduceP'>;
}
declare module 'ramda-adjunct/es/reduceRightP.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/reduceRightP'>;
}
declare module 'ramda-adjunct/es/rejectP.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/rejectP'>;
}
declare module 'ramda-adjunct/es/renameKeys.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/renameKeys'>;
}
declare module 'ramda-adjunct/es/renameKeysWith.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/renameKeysWith'>;
}
declare module 'ramda-adjunct/es/resolveP.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/resolveP'>;
}
declare module 'ramda-adjunct/es/sliceFrom.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/sliceFrom'>;
}
declare module 'ramda-adjunct/es/sliceTo.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/sliceTo'>;
}
declare module 'ramda-adjunct/es/spreadPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/spreadPath'>;
}
declare module 'ramda-adjunct/es/spreadProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/spreadProp'>;
}
declare module 'ramda-adjunct/es/stubArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/stubArray'>;
}
declare module 'ramda-adjunct/es/stubNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/stubNull'>;
}
declare module 'ramda-adjunct/es/stubObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/stubObj'>;
}
declare module 'ramda-adjunct/es/stubString.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/stubString'>;
}
declare module 'ramda-adjunct/es/stubUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/stubUndefined'>;
}
declare module 'ramda-adjunct/es/viewOr.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/viewOr'>;
}
declare module 'ramda-adjunct/es/weave.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/weave'>;
}
declare module 'ramda-adjunct/es/weaveLazy.js' {
  declare module.exports: $Exports<'ramda-adjunct/es/weaveLazy'>;
}
declare module 'ramda-adjunct/lib/cata.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/cata'>;
}
declare module 'ramda-adjunct/lib/concatRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/concatRight'>;
}
declare module 'ramda-adjunct/lib/curryRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/curryRight'>;
}
declare module 'ramda-adjunct/lib/curryRightN.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/curryRightN'>;
}
declare module 'ramda-adjunct/lib/fantasy-land/Identity.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/fantasy-land/Identity'>;
}
declare module 'ramda-adjunct/lib/fantasy-land/mapping.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/fantasy-land/mapping'>;
}
declare module 'ramda-adjunct/lib/fantasy-land/traits.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/fantasy-land/traits'>;
}
declare module 'ramda-adjunct/lib/fantasy-land/util.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/fantasy-land/util'>;
}
declare module 'ramda-adjunct/lib/flattenPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/flattenPath'>;
}
declare module 'ramda-adjunct/lib/flattenProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/flattenProp'>;
}
declare module 'ramda-adjunct/lib/hasPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/hasPath'>;
}
declare module 'ramda-adjunct/lib/index.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/index'>;
}
declare module 'ramda-adjunct/lib/internal/ap.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/internal/ap'>;
}
declare module 'ramda-adjunct/lib/internal/isOfTypeObject.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/internal/isOfTypeObject'>;
}
declare module 'ramda-adjunct/lib/internal/polyfills/Number.isFinite.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/lib/internal/polyfills/Number.isFinite'
  >;
}
declare module 'ramda-adjunct/lib/internal/polyfills/Number.isInteger.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/lib/internal/polyfills/Number.isInteger'
  >;
}
declare module 'ramda-adjunct/lib/internal/polyfills/Number.isNaN.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/lib/internal/polyfills/Number.isNaN'
  >;
}
declare module 'ramda-adjunct/lib/internal/polyfills/Number.MAX_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/lib/internal/polyfills/Number.MAX_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/lib/internal/polyfills/Number.MIN_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/lib/internal/polyfills/Number.MIN_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/lib/isArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isArray'>;
}
declare module 'ramda-adjunct/lib/isArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isArrayLike'>;
}
declare module 'ramda-adjunct/lib/isAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isAsyncFunction'>;
}
declare module 'ramda-adjunct/lib/isBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isBoolean'>;
}
declare module 'ramda-adjunct/lib/isDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isDate'>;
}
declare module 'ramda-adjunct/lib/isEven.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isEven'>;
}
declare module 'ramda-adjunct/lib/isFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isFinite'>;
}
declare module 'ramda-adjunct/lib/isFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isFloat'>;
}
declare module 'ramda-adjunct/lib/isFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isFunction'>;
}
declare module 'ramda-adjunct/lib/isGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isGeneratorFunction'>;
}
declare module 'ramda-adjunct/lib/isInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isInteger'>;
}
declare module 'ramda-adjunct/lib/isNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNaN'>;
}
declare module 'ramda-adjunct/lib/isNegative.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNegative'>;
}
declare module 'ramda-adjunct/lib/isNilOrEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNilOrEmpty'>;
}
declare module 'ramda-adjunct/lib/isNotArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotArray'>;
}
declare module 'ramda-adjunct/lib/isNotArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotArrayLike'>;
}
declare module 'ramda-adjunct/lib/isNotAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotAsyncFunction'>;
}
declare module 'ramda-adjunct/lib/isNotBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotBoolean'>;
}
declare module 'ramda-adjunct/lib/isNotDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotDate'>;
}
declare module 'ramda-adjunct/lib/isNotEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotEmpty'>;
}
declare module 'ramda-adjunct/lib/isNotFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotFinite'>;
}
declare module 'ramda-adjunct/lib/isNotFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotFloat'>;
}
declare module 'ramda-adjunct/lib/isNotFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotFunction'>;
}
declare module 'ramda-adjunct/lib/isNotGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotGeneratorFunction'>;
}
declare module 'ramda-adjunct/lib/isNotInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotInteger'>;
}
declare module 'ramda-adjunct/lib/isNotNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotNaN'>;
}
declare module 'ramda-adjunct/lib/isNotNil.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotNil'>;
}
declare module 'ramda-adjunct/lib/isNotNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotNull'>;
}
declare module 'ramda-adjunct/lib/isNotNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotNumber'>;
}
declare module 'ramda-adjunct/lib/isNotObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotObj'>;
}
declare module 'ramda-adjunct/lib/isNotObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotObjLike'>;
}
declare module 'ramda-adjunct/lib/isNotPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotPair'>;
}
declare module 'ramda-adjunct/lib/isNotPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotPlainObj'>;
}
declare module 'ramda-adjunct/lib/isNotString.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotString'>;
}
declare module 'ramda-adjunct/lib/isNotUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotUndefined'>;
}
declare module 'ramda-adjunct/lib/isNotValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNotValidDate'>;
}
declare module 'ramda-adjunct/lib/isNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNull'>;
}
declare module 'ramda-adjunct/lib/isNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isNumber'>;
}
declare module 'ramda-adjunct/lib/isObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isObj'>;
}
declare module 'ramda-adjunct/lib/isObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isObjLike'>;
}
declare module 'ramda-adjunct/lib/isOdd.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isOdd'>;
}
declare module 'ramda-adjunct/lib/isPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isPair'>;
}
declare module 'ramda-adjunct/lib/isPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isPlainObj'>;
}
declare module 'ramda-adjunct/lib/isPositive.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isPositive'>;
}
declare module 'ramda-adjunct/lib/isPromise.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isPromise'>;
}
declare module 'ramda-adjunct/lib/isString.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isString'>;
}
declare module 'ramda-adjunct/lib/isThenable.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isThenable'>;
}
declare module 'ramda-adjunct/lib/isUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isUndefined'>;
}
declare module 'ramda-adjunct/lib/isValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/isValidDate'>;
}
declare module 'ramda-adjunct/lib/lensEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/lensEq'>;
}
declare module 'ramda-adjunct/lib/lensIso.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/lensIso'>;
}
declare module 'ramda-adjunct/lib/lensNotEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/lensNotEq'>;
}
declare module 'ramda-adjunct/lib/lensNotSatisfy.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/lensNotSatisfy'>;
}
declare module 'ramda-adjunct/lib/lensSatisfies.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/lensSatisfies'>;
}
declare module 'ramda-adjunct/lib/liftF.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/liftF'>;
}
declare module 'ramda-adjunct/lib/liftFN.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/liftFN'>;
}
declare module 'ramda-adjunct/lib/list.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/list'>;
}
declare module 'ramda-adjunct/lib/mergePath.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/mergePath'>;
}
declare module 'ramda-adjunct/lib/mergePaths.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/mergePaths'>;
}
declare module 'ramda-adjunct/lib/mergeProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/mergeProp'>;
}
declare module 'ramda-adjunct/lib/mergeProps.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/mergeProps'>;
}
declare module 'ramda-adjunct/lib/mergeRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/mergeRight'>;
}
declare module 'ramda-adjunct/lib/noop.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/noop'>;
}
declare module 'ramda-adjunct/lib/omitIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/omitIndexes'>;
}
declare module 'ramda-adjunct/lib/paths.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/paths'>;
}
declare module 'ramda-adjunct/lib/pickIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/pickIndexes'>;
}
declare module 'ramda-adjunct/lib/reduceP.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/reduceP'>;
}
declare module 'ramda-adjunct/lib/reduceRightP.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/reduceRightP'>;
}
declare module 'ramda-adjunct/lib/rejectP.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/rejectP'>;
}
declare module 'ramda-adjunct/lib/renameKeys.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/renameKeys'>;
}
declare module 'ramda-adjunct/lib/renameKeysWith.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/renameKeysWith'>;
}
declare module 'ramda-adjunct/lib/resolveP.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/resolveP'>;
}
declare module 'ramda-adjunct/lib/sliceFrom.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/sliceFrom'>;
}
declare module 'ramda-adjunct/lib/sliceTo.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/sliceTo'>;
}
declare module 'ramda-adjunct/lib/spreadPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/spreadPath'>;
}
declare module 'ramda-adjunct/lib/spreadProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/spreadProp'>;
}
declare module 'ramda-adjunct/lib/stubArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/stubArray'>;
}
declare module 'ramda-adjunct/lib/stubNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/stubNull'>;
}
declare module 'ramda-adjunct/lib/stubObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/stubObj'>;
}
declare module 'ramda-adjunct/lib/stubString.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/stubString'>;
}
declare module 'ramda-adjunct/lib/stubUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/stubUndefined'>;
}
declare module 'ramda-adjunct/lib/viewOr.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/viewOr'>;
}
declare module 'ramda-adjunct/lib/weave.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/weave'>;
}
declare module 'ramda-adjunct/lib/weaveLazy.js' {
  declare module.exports: $Exports<'ramda-adjunct/lib/weaveLazy'>;
}
declare module 'ramda-adjunct/src/cata.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/cata'>;
}
declare module 'ramda-adjunct/src/concatRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/concatRight'>;
}
declare module 'ramda-adjunct/src/curryRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/curryRight'>;
}
declare module 'ramda-adjunct/src/curryRightN.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/curryRightN'>;
}
declare module 'ramda-adjunct/src/fantasy-land/Identity.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/fantasy-land/Identity'>;
}
declare module 'ramda-adjunct/src/fantasy-land/mapping.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/fantasy-land/mapping'>;
}
declare module 'ramda-adjunct/src/fantasy-land/traits.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/fantasy-land/traits'>;
}
declare module 'ramda-adjunct/src/fantasy-land/util.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/fantasy-land/util'>;
}
declare module 'ramda-adjunct/src/flattenPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/flattenPath'>;
}
declare module 'ramda-adjunct/src/flattenProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/flattenProp'>;
}
declare module 'ramda-adjunct/src/hasPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/hasPath'>;
}
declare module 'ramda-adjunct/src/index.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/index'>;
}
declare module 'ramda-adjunct/src/internal/ap.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/internal/ap'>;
}
declare module 'ramda-adjunct/src/internal/isOfTypeObject.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/internal/isOfTypeObject'>;
}
declare module 'ramda-adjunct/src/internal/polyfills/Number.isFinite.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/src/internal/polyfills/Number.isFinite'
  >;
}
declare module 'ramda-adjunct/src/internal/polyfills/Number.isInteger.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/src/internal/polyfills/Number.isInteger'
  >;
}
declare module 'ramda-adjunct/src/internal/polyfills/Number.isNaN.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/src/internal/polyfills/Number.isNaN'
  >;
}
declare module 'ramda-adjunct/src/internal/polyfills/Number.MAX_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/src/internal/polyfills/Number.MAX_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/src/internal/polyfills/Number.MIN_SAFE_INTEGER.js' {
  declare module.exports: $Exports<
    'ramda-adjunct/src/internal/polyfills/Number.MIN_SAFE_INTEGER'
  >;
}
declare module 'ramda-adjunct/src/isArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isArray'>;
}
declare module 'ramda-adjunct/src/isArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isArrayLike'>;
}
declare module 'ramda-adjunct/src/isAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isAsyncFunction'>;
}
declare module 'ramda-adjunct/src/isBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isBoolean'>;
}
declare module 'ramda-adjunct/src/isDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isDate'>;
}
declare module 'ramda-adjunct/src/isEven.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isEven'>;
}
declare module 'ramda-adjunct/src/isFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isFinite'>;
}
declare module 'ramda-adjunct/src/isFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isFloat'>;
}
declare module 'ramda-adjunct/src/isFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isFunction'>;
}
declare module 'ramda-adjunct/src/isGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isGeneratorFunction'>;
}
declare module 'ramda-adjunct/src/isInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isInteger'>;
}
declare module 'ramda-adjunct/src/isNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNaN'>;
}
declare module 'ramda-adjunct/src/isNegative.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNegative'>;
}
declare module 'ramda-adjunct/src/isNilOrEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNilOrEmpty'>;
}
declare module 'ramda-adjunct/src/isNotArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotArray'>;
}
declare module 'ramda-adjunct/src/isNotArrayLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotArrayLike'>;
}
declare module 'ramda-adjunct/src/isNotAsyncFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotAsyncFunction'>;
}
declare module 'ramda-adjunct/src/isNotBoolean.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotBoolean'>;
}
declare module 'ramda-adjunct/src/isNotDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotDate'>;
}
declare module 'ramda-adjunct/src/isNotEmpty.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotEmpty'>;
}
declare module 'ramda-adjunct/src/isNotFinite.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotFinite'>;
}
declare module 'ramda-adjunct/src/isNotFloat.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotFloat'>;
}
declare module 'ramda-adjunct/src/isNotFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotFunction'>;
}
declare module 'ramda-adjunct/src/isNotGeneratorFunction.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotGeneratorFunction'>;
}
declare module 'ramda-adjunct/src/isNotInteger.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotInteger'>;
}
declare module 'ramda-adjunct/src/isNotNaN.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotNaN'>;
}
declare module 'ramda-adjunct/src/isNotNil.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotNil'>;
}
declare module 'ramda-adjunct/src/isNotNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotNull'>;
}
declare module 'ramda-adjunct/src/isNotNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotNumber'>;
}
declare module 'ramda-adjunct/src/isNotObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotObj'>;
}
declare module 'ramda-adjunct/src/isNotObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotObjLike'>;
}
declare module 'ramda-adjunct/src/isNotPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotPair'>;
}
declare module 'ramda-adjunct/src/isNotPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotPlainObj'>;
}
declare module 'ramda-adjunct/src/isNotString.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotString'>;
}
declare module 'ramda-adjunct/src/isNotUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotUndefined'>;
}
declare module 'ramda-adjunct/src/isNotValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNotValidDate'>;
}
declare module 'ramda-adjunct/src/isNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNull'>;
}
declare module 'ramda-adjunct/src/isNumber.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isNumber'>;
}
declare module 'ramda-adjunct/src/isObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isObj'>;
}
declare module 'ramda-adjunct/src/isObjLike.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isObjLike'>;
}
declare module 'ramda-adjunct/src/isOdd.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isOdd'>;
}
declare module 'ramda-adjunct/src/isPair.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isPair'>;
}
declare module 'ramda-adjunct/src/isPlainObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isPlainObj'>;
}
declare module 'ramda-adjunct/src/isPositive.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isPositive'>;
}
declare module 'ramda-adjunct/src/isPromise.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isPromise'>;
}
declare module 'ramda-adjunct/src/isString.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isString'>;
}
declare module 'ramda-adjunct/src/isThenable.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isThenable'>;
}
declare module 'ramda-adjunct/src/isUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isUndefined'>;
}
declare module 'ramda-adjunct/src/isValidDate.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/isValidDate'>;
}
declare module 'ramda-adjunct/src/lensEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/lensEq'>;
}
declare module 'ramda-adjunct/src/lensIso.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/lensIso'>;
}
declare module 'ramda-adjunct/src/lensNotEq.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/lensNotEq'>;
}
declare module 'ramda-adjunct/src/lensNotSatisfy.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/lensNotSatisfy'>;
}
declare module 'ramda-adjunct/src/lensSatisfies.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/lensSatisfies'>;
}
declare module 'ramda-adjunct/src/liftF.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/liftF'>;
}
declare module 'ramda-adjunct/src/liftFN.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/liftFN'>;
}
declare module 'ramda-adjunct/src/list.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/list'>;
}
declare module 'ramda-adjunct/src/mergePath.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/mergePath'>;
}
declare module 'ramda-adjunct/src/mergePaths.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/mergePaths'>;
}
declare module 'ramda-adjunct/src/mergeProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/mergeProp'>;
}
declare module 'ramda-adjunct/src/mergeProps.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/mergeProps'>;
}
declare module 'ramda-adjunct/src/mergeRight.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/mergeRight'>;
}
declare module 'ramda-adjunct/src/noop.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/noop'>;
}
declare module 'ramda-adjunct/src/omitIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/omitIndexes'>;
}
declare module 'ramda-adjunct/src/paths.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/paths'>;
}
declare module 'ramda-adjunct/src/pickIndexes.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/pickIndexes'>;
}
declare module 'ramda-adjunct/src/reduceP.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/reduceP'>;
}
declare module 'ramda-adjunct/src/reduceRightP.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/reduceRightP'>;
}
declare module 'ramda-adjunct/src/rejectP.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/rejectP'>;
}
declare module 'ramda-adjunct/src/renameKeys.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/renameKeys'>;
}
declare module 'ramda-adjunct/src/renameKeysWith.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/renameKeysWith'>;
}
declare module 'ramda-adjunct/src/resolveP.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/resolveP'>;
}
declare module 'ramda-adjunct/src/sliceFrom.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/sliceFrom'>;
}
declare module 'ramda-adjunct/src/sliceTo.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/sliceTo'>;
}
declare module 'ramda-adjunct/src/spreadPath.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/spreadPath'>;
}
declare module 'ramda-adjunct/src/spreadProp.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/spreadProp'>;
}
declare module 'ramda-adjunct/src/stubArray.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/stubArray'>;
}
declare module 'ramda-adjunct/src/stubNull.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/stubNull'>;
}
declare module 'ramda-adjunct/src/stubObj.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/stubObj'>;
}
declare module 'ramda-adjunct/src/stubString.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/stubString'>;
}
declare module 'ramda-adjunct/src/stubUndefined.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/stubUndefined'>;
}
declare module 'ramda-adjunct/src/viewOr.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/viewOr'>;
}
declare module 'ramda-adjunct/src/weave.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/weave'>;
}
declare module 'ramda-adjunct/src/weaveLazy.js' {
  declare module.exports: $Exports<'ramda-adjunct/src/weaveLazy'>;
}
declare module 'ramda-adjunct/tonicExample.js' {
  declare module.exports: $Exports<'ramda-adjunct/tonicExample'>;
}
